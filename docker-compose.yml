version: "3"

services:
  person-db:
    image: postgres:alpine
    ports:
      - "30052:5432"
    volumes:
      # The default postgis script is -> /docker-entrypoint-initdb.d/10_postgis.sh
      - ./modules/person_api/db/11_init_db.sql:/docker-entrypoint-initdb.d/11_init_db.sql
      - ./modules/person_api/db/12_populate_db.sql:/docker-entrypoint-initdb.d/12_populate_db.sql
    environment:
      POSTGRES_USER: person_api_db_user
      POSTGRES_PASSWORD: person_api_db_pass
      POSTGRES_DB: person_api_db

  location-db:
    image: postgis/postgis:14-3.1-alpine
    ports:
      - "30062:5432"
    volumes:
      # The default postgis script is -> /docker-entrypoint-initdb.d/10_postgis.sh
      - ./modules/location_api/db/11_init_db.sql:/docker-entrypoint-initdb.d/11_init_db.sql
      - ./modules/location_api/db/12_populate_db.sql:/docker-entrypoint-initdb.d/12_populate_db.sql
    environment:
      POSTGRES_USER: location_api_db_user
      POSTGRES_PASSWORD: location_api_db_pass
      POSTGRES_DB: location_api_db

  zookeeper-server:
    image: confluentinc/cp-zookeeper:6.2.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker-server:
    image: confluentinc/cp-kafka:6.2.1
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-server:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-server:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    depends_on:
      - zookeeper-server

  broker-ui-server:
    image: consdata/kouncil:latest
    restart: always
    pull_policy: always
    ports:
      - "9000:8080"
    environment:
      bootstrapServers: broker-server:29092
    depends_on:
      - broker-server

  person_server:
    build:
      context: ${PWD}/modules/person_api
      dockerfile: ${PWD}/modules/person_api/Dockerfile
    ports:
      - "30050:30050"
    environment:
      DB_USERNAME: person_api_db_user
      DB_PASSWORD: person_api_db_pass
      DB_NAME: person_api_db
      DB_HOST: person-db
      KAFKA_SERVER: broker-server:29092
      KAFKA_TOPIC: Persons
    depends_on:
      - person-db
      - broker-server

  location_server:
    build:
      context: ${PWD}/modules/location_api
      dockerfile: ${PWD}/modules/location_api/Dockerfile
    ports:
      - "30060:30060"
    environment:
      DB_USERNAME: location_api_db_user
      DB_PASSWORD: location_api_db_pass
      DB_NAME: location_api_db
      DB_HOST: location-db
    depends_on:
      - location-db

  connection_server:
    build:
      context: ${PWD}/modules/connection_api
      dockerfile: ${PWD}/modules/connection_api/Dockerfile
    ports:
      - "30070:30070"
    environment:
      PERSON_API_ENDPOINT: http://person_server:30050
      LOCATION_API_ENDPOINT: location_server:30060
    depends_on:
      - person_server
      - location_server
